// disable preset opacity: not readable
@mixin make-disabled-form-readable-input {
  :host {
    .p-inputtext.p-component:disabled {
      opacity: unset;
    }
  }
}
@mixin make-disabled-form-readable-dropdown {
  :host ::ng-deep {
    .p-dropdown.p-component.p-disabled {
      opacity: unset;
    }
  }
}
@mixin make-disabled-form-readable-checkbox {
  :host ::ng-deep {
    .p-checkbox-box.p-disabled,
    .p-checkbox-label.p-disabled {
      opacity: unset;
    }
  }
}

@mixin compact-dropdown-list-items {
  :host ::ng-deep {
    .p-dropdown-panel .p-dropdown-items .p-dropdown-item {
      padding: 0.4rem 1rem !important;
    }
  }
}

@mixin invisible {
  :host ::ng-deep {
    .invisible {
      visibility: hidden;
    }
  }
}

@mixin danger-action {
  :host ::ng-deep {
    .danger-action-text {
      color: var(--danger-button-bg);
    }
    .danger-action-bg {
      color: white;
      background-color: var(--danger-button-bg);
    }
  }
}

@mixin input-clear-icon {
  .p-input-icon-right > a:last-of-type {
    right: 0.75rem;
    color: var(--emphasis-medium);
  }
  .p-input-icon-left > a,
  .p-input-icon-right > a {
    position: absolute;
    top: 50%;
    margin-top: -0.5rem;
  }
}

@mixin prepare-inputgroup {
  :host ::ng-deep {
    .inputgroup-dropdown-with-link {
      border-right: none;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    .input-field-correction .p-inputtext {
      padding-top: 1rem !important;
      padding-bottom: 0.5rem !important;
    }
    .pseudo-button:hover {
      background: var(--button-hover-bg) !important;
      cursor: pointer;
      * {
        background: var(--button-hover-bg) !important;
      }
    }
  }
}

@mixin card-badges {
  :host ::ng-deep {
    .card-badge-base {
      border-radius: var(--border-radius);
      opacity: 0.7;
    }
    .card-primary-color {
      background-color: var(--primary-color);
      color: var(--primary-color-text);
      &:hover {
        color: unset;
      }
    }
    .card-badge-right {
      border-radius: var(--border-radius);
      display: inline-block;
      position: absolute;
      right: 3px;
      opacity: 0.7;
      &.badge-1 {
        top: 3px;
      }
      &.badge-2 {
        top: 35px;
      }
      &.badge-4 {
        top: 95px;
      }
    }
    .card-badge-left {
      border-radius: var(--border-radius);
      display: inline-block;
      position: absolute;
      left: 3px;
      opacity: 0.7;
      &.badge-1 {
        top: 3px;
      }
      &.badge-2 {
        top: 35px;
      }
      &.badge-2-text {
        top: 22px;
      }
    }
    .card-badge-left-text {
      left: 4px;
      font-size: 0.7rem !important;
    }
    .pseudo-button-link {
      border-radius: var(--border-radius);
      color: inherit;
      &:hover {
        color: var(--primary-color-text);
        background: var(--button-hover-bg);
        cursor: pointer;
      }
    }
  }
}

@mixin correct-data-view-header-for-tabpanel {
  :host ::ng-deep {
    .p-dataview .p-dataview-header,
    .p-datatable .p-datatable-header {
      padding: 0.2rem 0.2rem 0.9rem 0.2rem;
    }
  }
}

@mixin correct-data-view-control {
  :host ::ng-deep {
    .data-view-control,
    .data-view-control * {
      color: var(--emphasis-medium);
    }
    .data-view-control-border.p-dropdown {
      .p-inputtext {
        color: var(--emphasis-medium);
        opacity: 0.9;
      }
      &:last-of-type {
        border-top-left-radius: var(--border-radius);
        border-bottom-left-radius: var(--border-radius);
      }
    }
  }
}

@mixin dataview-zebra-rows {
  :host ::ng-deep {
    .p-dataview-content .p-grid > div {
      min-height: 60px;
      &.listview-row {
        &:nth-child(odd) {
          background-color: #f8f9fa;
        }
      }
    }
  }
}
@mixin picklist-zebra-rows {
  :host ::ng-deep {
    .p-picklist-list li {
      &:nth-child(odd) {
        background-color: #f8f9fa;
      }
    }
  }
}

@mixin correct-modal-dialog {
  :host ::ng-deep {
    .p-dialog .p-dialog-content {
      border-bottom-left-radius: var(--border-radius);
      border-bottom-right-radius: var(--border-radius);
    }
  }
}
@mixin non-full-size-modal-dialog {
  :host ::ng-deep {
    @media (max-width: 991px) {
      .p-dialog.p-dialog {
        max-height: unset !important;
        height: unset !important;
      }
    }
  }
}

@mixin table-inline-buttons {
  :host ::ng-deep {
    // reduce the size of buttons used inside a table row
    th button.p-button,
    td button.p-button {
      &.p-button-icon-only {
        width: unset !important;
      }
      &.p-button-rounded {
        height: unset !important;
      }
      &:disabled {
        opacity: 0.38 !important;
      }
    }
  }
}

@mixin correct-autocomplete {
  :host ::ng-deep {
    .p-autocomplete-panel .p-autocomplete-items .p-autocomplete-item {
      padding-top: 0.4rem;
      padding-bottom: 0.4rem;
      &:nth-child(odd) {
        background-color: #f8f9fa;
      }
    }
    .p-autocomplete-clear-icon {
      /* fix for bug in PrimeNG */
      right: 3.5rem;
    }
    .p-autocomplete .p-autocomplete-loader {
      /* fix for bug in PrimeNG */
      display: none;
    }
  }
}

@mixin filter-select-button {
  :host ::ng-deep {
    .p-selectbutton-title {
      width: 2rem;
    }
    .slim-selectbutton {
      display: flex;
      flex-wrap: wrap;
      flex-direction: column;
      row-gap: 0.1rem;
      align-items: center;

      .p-selectbutton .p-button {
        text-align: center;
        display: inline-block;
        color: var(--emphasis-medium);
        font-weight: var(--font-weight);
        padding: 0.3rem 0.8rem;
        border: var(--input-border);
      }
      .p-selectbutton-subtitle {
        color: var(--emphasis-medium);
        font-size: 0.8rem;
      }
    }
    .filter-selectbutton {
      .p-selectbutton .p-button {
        opacity: 0.9 !important;
        border: var(--toggle-button-border);
        &.p-highlight {
          background: var(--toggle-button-active-bg);
        }
        &:not(.p-disabled):not(.p-highlight):hover {
          color: var(--text-color);
          border-color: var(--toggle-button-hover-border-color);
          background-color: var(--toggle-button-hover-bg);
        }
      }
    }
  }
}
