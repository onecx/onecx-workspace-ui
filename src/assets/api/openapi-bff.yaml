---
openapi: 3.0.3
info:
  title: onecx-workspace-bff
  description: Backend-For-Frontend (BFF) service for onecx-workspace. This API provides endpoints for managing Workspaces, Menus, Products, Roles and Assignments.
  version: "1.0"
servers:
  - url: http://onecx-workspace-bff:8080/
tags:
  - name: workspace
    description: Managing Workspaces
  - name: menuItem
    description: Managing Menus
  - name: product
    description: Managing Products
  - name: assignment
    description: Managing Menu-to-Role-Assignments
  - name: slot
    description: Managing Slots
paths:
  /workspaces:
    post:
      x-onecx:
        permissions:
          workspace:
            - write
      tags:
        - workspace
      description: Create a new workspace
      operationId: createWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
      responses:
        "201":
          description: Workspace created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/search:
    post:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - workspace
      description: Search workspaces by search criteria
      operationId: searchWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchWorkspacesRequest'
      responses:
        "200":
          description: Workspace search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchWorkspacesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/{id}:
    get:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - workspace
      description: Get a workspace by its id
      operationId: getWorkspaceById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Workspace retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    put:
      x-onecx:
        permissions:
          workspace:
            - write
      tags:
        - workspace
      description: Update a workspace by its id
      operationId: updateWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequest'
      responses:
        "200":
          description: Workspace updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Workspace not found
    delete:
      x-onecx:
        permissions:
          workspace:
            - delete
      tags:
        - workspace
      description: Delete a workspace by its id
      operationId: deleteWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: Workspace deleted successfully
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/name/{workspaceName}:
    get:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - workspace
      description: Get workspace by its name
      operationId: getWorkspaceByName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      responses:
        "200":
          description: Workspace retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /menu/{menuItemId}:
    get:
      x-onecx:
        permissions:
          menu:
            - read
      tags:
        - menuItem
      description: Get a menu item by its id
      operationId: getMenuItemById
      parameters:
        - $ref: '#/components/parameters/menuItemId'
      responses:
        "200":
          description: Menu item retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        "404":
          description: Menu item not found
    put:
      x-onecx:
        permissions:
          menu:
            - write
      tags:
        - menuItem
      description: Update a menu item by its id
      operationId: updateMenuItem
      parameters:
        - $ref: '#/components/parameters/menuItemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMenuItemRequest'
      responses:
        "200":
          description: Menu item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Menu item not found
    delete:
      x-onecx:
        permissions:
          menu:
            - delete
      tags:
        - menuItem
      description: Delete a menu item by its id
      operationId: deleteMenuItemById
      parameters:
        - $ref: '#/components/parameters/menuItemId'
      responses:
        "204":
          description: Menu item deleted successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /menu:
    post:
      x-onecx:
        permissions:
          menu:
            - write
      tags:
        - menuItem
      description: Create a new menu item to workspace menu
      operationId: createMenuItemForWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMenuItem'
      responses:
        "201":
          description: Menu item created successfully
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /menu/menuItems/tree:
    post:
      x-onecx:
        permissions:
          menu:
            - read
      tags:
        - menuItem
      description: Get menu items as a tree structure for a specific workspace
      operationId: getMenuStructure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuStructureSearchCriteria'
      responses:
        "200":
          description: Menu items retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemStructure'
        "404":
          description: Menu items not found
  /menu/{menuItemId}/parentItemId:
    put:
      x-onecx:
        permissions:
          menu:
            - write
      tags:
        - menuItem
      description: Update an existing menu item parent by its id
      operationId: updateMenuItemParent
      parameters:
        - $ref: '#/components/parameters/menuItemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMenuItemParentRequest'
      responses:
        "200":
          description: Menu item parent updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Menu item not found
  /menu/search:
    post:
      x-onecx:
        permissions:
          menu:
            - read
      tags:
        - menuItem
      description: Search for menu items by search criteria
      operationId: searchMenuItemsByCriteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemSearchCriteria'
      responses:
        "200":
          description: Menu item search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemPageResult'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /menu/workspace/{id}:
    delete:
      x-onecx:
        permissions:
          menu:
            - delete
      tags:
        - menuItem
      description: Delete all menu items of a workspace by its id
      operationId: deleteAllMenuItemsForWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: Menu items deleted successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /menu/menuItems:
    post:
      x-onecx:
        permissions:
          menu:
            - read
      tags:
        - menuItem
      description: Get user specific menu items
      operationId: getMenuItems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMenuItemsRequest'
      responses:
        200:
          description: Menu items retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMenuItemsResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/{id}/products:
    post:
      x-onecx:
        permissions:
          product:
            - write
      tags:
        - workspaceProduct
      description: Create/Register a new product to workspace
      operationId: createProductInWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        "201":
          description: Product created/registered successfully
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateProductResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    get:
      x-onecx:
        permissions:
          product:
            - read
      tags:
        - workspaceProduct
      description: Get all products belonging to a workspace
      operationId: getProductsByWorkspaceId
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsResponse'
        "404":
          description: Products not found
  /workspaces/{id}/products/{productId}:
    delete:
      x-onecx:
        permissions:
          product:
            - delete
      tags:
        - workspaceProduct
      description: Delete a product by the workspace id and the product id
      operationId: deleteProductById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/productId'
      responses:
        "204":
          description: Product deleted successfully
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    put:
      x-onecx:
        permissions:
          product:
            - write
      tags:
        - workspaceProduct
      description: Update a product and MFEs by workspace id and product id
      operationId: updateProductById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/productId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateProductResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Product not found
    get:
      x-onecx:
        permissions:
          product:
            - read
      tags:
        - workspaceProduct
      description: Get a product by the workspace id and product id
      operationId: getProductById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/productId'
      responses:
        200:
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product not found
  /products:
    x-onecx:
      permissions:
        product:
          - read
    post:
      tags:
        - product
      description: search all available products of the product-store by search criteria
      operationId: searchAvailableProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductStoreSearchCriteria'
      responses:
        "200":
          description: Products from product-store retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStorePageResult'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/export:
    x-onecx:
      permissions:
        workspace:
          - read
    post:
      tags:
        - workspace
      description: Export workspaces
      operationId: exportWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportWorkspacesRequest'
      responses:
        "200":
          description: Workspaces exported successfully
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Workspaces not found
  /workspaces/import:
    x-onecx:
      permissions:
        workspace:
          - write
    post:
      tags:
        - workspace
      description: Import workspaces by a previously exported snapshot
      operationId: importWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Workspaces imported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /menu/{workspaceName}/export:
    get:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - menuItem
      description: Export a menu of a workspace by its name
      operationId: exportMenuByWorkspaceName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      responses:
        "200":
          description: Menu exported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuSnapshot'
        "404":
          description: Menu not found
  /menu/{workspaceName}/import:
    post:
      x-onecx:
        permissions:
          workspace:
            - write
      tags:
        - menuItem
      description: Import a menu into a workspace by its name
      operationId: importMenuByWorkspaceName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuSnapshot'
      responses:
        "200":
          description: Menu imported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMenuResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/roles/search:
    post:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - workspaceRoles
      description: Search workspace roles by search criteria
      operationId: searchWorkspaceRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRoleSearchCriteria'
      responses:
        "200":
          description: Role search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRolePageResult'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/roles:
    post:
      x-onecx:
        permissions:
          role:
            - write
      tags:
        - workspaceRoles
      description: Create a new role for a workspace
      operationId: createWorkspaceRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRoleRequest'
      responses:
        "201":
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRole'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/roles/{id}:
    delete:
      x-onecx:
        permissions:
          role:
            - delete
      tags:
        - workspaceRoles
      description: Delete a workspace role by its id
      operationId: deleteWorkspaceRole
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        204:
          description: Role deleted successfully
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    get:
      x-onecx:
        permissions:
          role:
            - read
      tags:
        - workspaceRoles
      description: Get a workspace role by its id
      operationId: getWorkspaceRole
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Role retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRole'
        404:
          description: Role not found
    put:
      x-onecx:
        permissions:
          role:
            - write
      tags:
        - workspaceRoles
      description: Update a workspace role by its id
      operationId: updateWorkspaceRole
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRoleRequest'
      responses:
        200:
          description: Role updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRole'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        404:
          description: Role not found
  /images/{refId}/{refType}:
    post:
      x-onecx:
        permissions:
          workspace:
            - write
      tags:
        - imagesInternal
      description: Upload an image by its reference id and type
      parameters:
        - name: refId
          in: path
          required: true
          schema:
            type: string
        - name: refType
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/RefType"
        - name: mimeType
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/MimeType"
      operationId: uploadImage
      requestBody:
        required: true
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: Image created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        "400":
          description: Bad Request
    get:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - imagesInternal
      description: Get an image by its reference id and type
      operationId: getImage
      parameters:
        - name: refId
          in: path
          required: true
          schema:
            type: string
        - name: refType
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/RefType"
      responses:
        "200":
          description: Image retrieved successfully
          content:
            image/*:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    delete:
      x-onecx:
        permissions:
          workspace:
            - delete
      tags:
        - imagesInternal
      description: Delete an image by its reference id and type
      operationId: deleteImage
      parameters:
        - name: refId
          in: path
          required: true
          schema:
            type: string
        - name: refType
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/RefType"
      responses:
        "204":
          description: Image deleted successfully
  /images/product/{productName}:
    get:
      x-onecx:
        permissions:
          product:
            - read
      tags:
        - imagesInternal
      description: Get a logo of a product by its name
      operationId: getProductLogo
      parameters:
        - name: productName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product retrieved successfully
          content:
            image/*:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/search:
    post:
      x-onecx:
        permissions:
          assignment:
            - read
      tags:
        - assignment
      description: Search for assignments by search criteria
      operationId: searchAssignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentSearchCriteria'
      responses:
        "200":
          description: Assignment search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentPageResult'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments:
    post:
      x-onecx:
        permissions:
          assignment:
            - write
      tags:
        - assignment
      description: Create a new assignment
      operationId: createAssignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssignmentRequest'
      responses:
        "201":
          description: Assignment created successfully
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/{id}:
    delete:
      x-onecx:
        permissions:
          assignment:
            - delete
      tags:
        - assignment
      description: Delete an assignment by its id
      operationId: deleteAssignment
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        204:
          description: Assignment deleted successfully
  /slots:
    post:
      x-onecx:
        permissions:
          slot:
            - write
      tags:
        - slot
      description: Create/Add a new slot to a workspace
      operationId: createSlot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSlotRequest'
      responses:
        "201":
          description: Slot created successfully
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /slots/workspace/{id}:
    get:
      x-onecx:
        permissions:
          slot:
            - read
      tags:
        - slot
      description: Get all slots of a workspace by its id
      operationId: getSlotsForWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Slots retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSlots'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /slots/{id}:
    get:
      x-onecx:
        permissions:
          slot:
            - read
      tags:
        - slot
      description: Get a slot by its id
      operationId: getSlotById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: Slot retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
        "404":
          description: Slot not found
    delete:
      x-onecx:
        permissions:
          slot:
            - delete
      tags:
        - slot
      description: Delete a slot by its id
      operationId: deleteSlotById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: Slot deleted successfully
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    put:
      x-onecx:
        permissions:
          slot:
            - write
      tags:
        - slot
      description: Update an existing slot by its id
      operationId: updateSlot
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSlotRequest'
      responses:
        "200":
          description: Slot updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Slot not found
components:
  schemas:
    CreateSlotRequest:
      type: object
      required:
        - workspaceId
        - name
      properties:
        workspaceId:
          type: string
        name:
          type: string
    UpdateSlotRequest:
      type: object
      required:
        - modificationCount
        - name
      properties:
        modificationCount:
          format: int32
          type: integer
        name:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/SlotComponent'
    Slot:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        workspaceId:
          type: string
        name:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/SlotComponent'
    SlotComponent:
      type: object
      required:
        - productName
        - appId
        - name
      properties:
        productName:
          type: string
        appId:
          type: string
        name:
          type: string
    WorkspaceSlots:
      type: object
      properties:
        slots:
          type: array
          items:
            $ref: '#/components/schemas/Slot'
    MimeType:
      type: string
      enum: [ "image/x-icon", "image/svg+xml", "image/png", "image/jpg", "image/jpeg" ]
    RefType:
      type: string
      enum: [ logo, logo-small, favicon ]
    ImageInfo:
      type: object
      properties:
        id:
          type: string
    Workspace:
      required:
        - name
        - displayName
      type: object
      properties:
        id:
          type: string
          readOnly: true
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
          readOnly: true
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
          readOnly: true
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        theme:
          type: string
        homePage:
          type: string
        baseUrl:
          type: string
        companyName:
          type: string
        phoneNumber:
          type: string
        rssFeedUrl:
          type: string
        footerLabel:
          type: string
        logoUrl:
          type: string
        smallLogoUrl:
          type: string
        address:
          $ref: '#/components/schemas/WorkspaceAddress'
        mandatory:
          type: boolean
          default: false
        operator:
          type: boolean
          default: false
        disabled:
          type: boolean
    WorkspaceAbstract:
      required:
        - name
        - displayName
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        theme:
          type: string
        baseUrl:
          type: string
        logoUrl:
          type: string
        smallLogoUrl:
          type: string
        disabled:
          type: boolean
        operator:
          type: boolean
        mandatory:
          type: boolean
    WorkspaceAddress:
      type: object
      properties:
        street:
          type: string
        streetNo:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
    CreateWorkspaceRequest:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    CreateWorkspaceResponse:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    SearchWorkspacesRequest:
      type: object
      properties:
        name:
          type: string
        themeName:
          type: string
        productName:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    SearchWorkspacesResponse:
      allOf:
        - $ref: '#/components/schemas/PagingResponse'
        - type: object
          properties:
            stream:
              type: array
              items:
                $ref: '#/components/schemas/WorkspaceAbstract'
    GetWorkspaceResponse:
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    UpdateWorkspaceRequest:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    MenuItem:
      type: object
      required:
        - modificationCount
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
          default: false
        position:
          format: int32
          type: integer
        badge:
          type: string
        external:
          type: boolean
          default: false
        target:
          $ref: '#/components/schemas/Target'
        scope:
          $ref: '#/components/schemas/Scope'
        parentItemId:
          type: string
        i18n:
          type: object
          additionalProperties:
            type: string
    CreateMenuItem:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        disabled:
          type: boolean
          default: false
        position:
          format: int32
          type: integer
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        external:
          type: boolean
          default: false
        target:
          $ref: '#/components/schemas/Target'
        parentItemId:
          type: string
        i18n:
          type: object
          additionalProperties:
            type: string
    UpdateMenuItemRequest:
      type: object
      required:
        - modificationCount
        - position
      properties:
        modificationCount:
          format: int32
          type: integer
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
          default: false
        position:
          minimum: 0
          format: int32
          type: integer
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        external:
          type: boolean
          default: false
        target:
          $ref: '#/components/schemas/Target'
        parentItemId:
          type: string
        i18n:
          type: object
          additionalProperties:
            type: string
    MenuStructureSearchCriteria:
      type: object
      required:
        - workspaceId
      properties:
        roles:
          type: array
          items:
            type: string
        workspaceId:
          type: string
    MenuItemSearchCriteria:
      type: object
      properties:
        workspaceId:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    MenuItemPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemResult'
    MenuItemResult:
      type: object
      required:
        - modificationCount
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
          default: false
        position:
          format: int32
          type: integer
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        external:
          type: boolean
          default: false
        target:
          $ref: '#/components/schemas/Target'
        parentItemId:
          type: string
    MenuItemStructure:
      type: object
      required:
        - menuItems
        - workspaceId
      properties:
        workspaceId:
          type: string
        menuItems:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/WorkspaceMenuItem'
    WorkspaceMenuItem:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
          default: false
        position:
          format: int32
          type: integer
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        external:
          type: boolean
          default: false
        target:
          $ref: '#/components/schemas/Target'
        parentItemId:
          type: string
        i18n:
          type: object
          additionalProperties:
            type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceMenuItem'
    UpdateMenuItemParentRequest:
      type: object
      required:
        - modificationCount
        - position
      properties:
        modificationCount:
          format: int32
          type: integer
        position:
          minimum: 0
          format: int32
          type: integer
        parentItemId:
          type: string
    Product:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        productName:
          type: string
        displayName:
          type: string
        version:
          type: string
        baseUrl:
          type: string
        imageUrl:
          type: string
        description:
          type: string
        undeployed:
          type: boolean
          default: false
        microfrontends:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Microfrontend'
        slots:
          type: array
          items:
            $ref: '#/components/schemas/Slot'
    Microfrontend:
      type: object
      properties:
        id:
          type: string
        appId:
          type: string
        appName:
          type: string
        appVersion:
          type: string
        basePath:
          type: string
        deprecated:
          type: boolean
          default: false
        undeployed:
          type: boolean
          default: false
        type:
          $ref: '#/components/schemas/MicrofrontendType'
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/UIEndpoint'

    CreateProductRequest:
      required:
        - productName
        - baseUrl
      type: object
      properties:
        productName:
          type: string
        displayName:
          type: string
        baseUrl:
          type: string
        microfrontends:
          type: array
          items:
            $ref: '#/components/schemas/CreateUpdateMicrofrontend'
        slots:
          type: array
          items:
            $ref: '#/components/schemas/CreateSlot'
    CreateSlot:
      type: object
      properties:
        name:
          type: string
    CreateUpdateMicrofrontend:
      required:
        - appId
        - basePath
      type: object
      properties:
        appId:
          type: string
        basePath:
          type: string
    CreateUpdateProductResponse:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Product'
    GetProductsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    UpdateProductRequest:
      required:
        - baseUrl
        - modificationCount
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        displayName:
          type: string
        baseUrl:
          type: string
        microfrontends:
          type: array
          items:
            $ref: '#/components/schemas/CreateUpdateMicrofrontend'
    ImportMenuResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        status:
          $ref: '#/components/schemas/ImportResponseStatus'
    ImportWorkspaceResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        workspaces:
          additionalProperties:
            $ref: '#/components/schemas/ImportResponseStatus'
        menus:
          additionalProperties:
            $ref: '#/components/schemas/ImportResponseStatus'
    ImportResponseStatus:
      type: string
      enum:
        - UPDATED
        - CREATED
        - SKIPPED
        - ERROR
    MenuSnapshot:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        menu:
          $ref: '#/components/schemas/EximMenuStructure'
    EximMenuStructure:
      type: object
      properties:
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/EximWorkspaceMenuItem'
    EximWorkspaceMenuItem:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
          default: false
        position:
          format: int32
          type: integer
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/EximScope'
        external:
          type: boolean
          default: false
        target:
          $ref: '#/components/schemas/Target'
        roles:
          type: array
          uniqueItems: true
          items:
            type: string
        i18n:
          type: object
          additionalProperties:
            type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/EximWorkspaceMenuItem'
    EximScope:
      enum:
        - WORKSPACE
        - APP
        - PAGE
      type: string
    ExportWorkspacesRequest:
      type: object
      required:
        - includeMenus
      properties:
        names:
          type: array
          uniqueItems: true
          items:
            type: string
        includeMenus:
          type: boolean
          default: true
    Scope:
      enum:
        - WORKSPACE
        - APP
        - PAGE
      type: string
    PagingResponse:
      type: object
      properties:
        totalElements:
          format: int64
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
    ProductStoreSearchCriteria:
      type: object
      properties:
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    ProductStorePageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/ProductStoreItem'
    ProductStoreItem:
      type: object
      properties:
        productName:
          type: string
        displayName:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        baseUrl:
          type: string
        version:
          type: string
        undeployed:
          type: boolean
          default: false
        microfrontends:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/MicrofrontendPS'
        slots:
          type: array
          items:
            $ref: '#/components/schemas/SlotPS'
    SlotPS:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        deprecated:
          type: boolean
          default: false
        undeployed:
          type: boolean
          default: false
    MicrofrontendPS:
      type: object
      properties:
        appId:
          type: string
        appName:
          type: string
        appVersion:
          type: string
        deprecated:
          type: boolean
          default: false
        undeployed:
          type: boolean
          default: false
        type:
          $ref: '#/components/schemas/MicrofrontendType'
        exposedModule:
          type: string
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/UIEndpoint'
    UIEndpoint:
      type: object
      properties:
        path:
          type: string
        name:
          type: string
    MicrofrontendType:
      type: string
      enum: [ MODULE, COMPONENT ]
      default: 'MODULE'
    WorkspaceRoleSearchCriteria:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        workspaceId:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    CreateWorkspaceRoleRequest:
      type: object
      required:
        - workspaceId
      properties:
        workspaceId:
          type: string
        name:
          type: string
        description:
          type: string
    UpdateWorkspaceRoleRequest:
      type: object
      required:
        - modificationCount
      properties:
        name:
          type: string
        description:
          type: string
        modificationCount:
          format: int32
          type: integer
    WorkspaceRolePageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceRole'
    WorkspaceRole:
      type: object
      properties:
        id:
          type: string
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        name:
          type: string
        description:
          type: string
    AssignmentSearchCriteria:
      type: object
      properties:
        workspaceId:
          type: string
        menuItemId:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 3000
          type: integer
    AssignmentPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
    CreateAssignmentRequest:
      type: object
      required:
        - roleId
        - menuItemId
      properties:
        roleId:
          type: string
        menuItemId:
          type: string
    Assignment:
      type: object
      properties:
        id:
          type: string
        roleId:
          type: string
        menuItemId:
          type: string
        workspaceId:
          type: string
    GetMenuItemsRequest:
      type: object
      required:
        - workspaceName
      properties:
        workspaceName:
          type: string
        menuKeys:
          type: array
          minItems: 1
          items:
            type: string
    GetMenuItemsResponse:
      type: object
      properties:
        workspaceName:
          type: string
        menu:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/UserWorkspaceMenuItem'
    UserWorkspaceMenuStructure:
      type: object
      properties:
        workspaceName:
          type: string
        menu:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/UserWorkspaceMenuItem'
    UserWorkspaceMenuItem:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        applicationId:
          type: string
        position:
          format: int32
          type: integer
        badge:
          type: string
        external:
          type: boolean
          default: false
        target:
          $ref: '#/components/schemas/Target'
        disabled:
          type: boolean
        i18n:
          type: object
          additionalProperties:
            type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/UserWorkspaceMenuItem'
    Target:
      type: string
      enum:
        - _self
        - _blank
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    ValidationConstraint:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
  parameters:
    id:
      in: path
      name: id
      required: true
      schema:
        type: string
    workspaceName:
      in: path
      name: workspaceName
      required: true
      schema:
        type: string
    menuItemId:
      in: path
      name: menuItemId
      required: true
      schema:
        type: string
    productId:
      in: path
      name: productId
      required: true
      schema:
        type: string