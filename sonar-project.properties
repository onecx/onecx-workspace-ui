# sonar.verbose=true
# run locally:
#   docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latest
#      user/pwd: admin/admin
#      generate project token and use it in sonar.token!
# start:
#   npm run sonar
#
sonar.host.url=http://localhost:9000
sonar.token=sqp_b7b62eb8330bdf60e221b22de06700e97f28eb60
sonar.verbose=false
#
sonar.organization=onecx
sonar.projectKey=onecx-workspace-ui
sonar.projectName=onecx-workspace-ui
#
sonar.scm.disabled=true
sonar.sources=src
sonar.tests=src
sonar-language="js"
sonar.sourceEncoding=UTF-8
#
# reporting
sonar.javascript.coveragePlugin=lcov
sonar.javascript.lcov.reportPaths=./reports/coverage/lcov.info
sonar.testExecutionReportPaths=./reports/sonarqube_report.xml
sonar.working.directory=./reports/.scannerwork
# files
sonar.exclusions=src/app/shared/generated/**/*,pre_loaders/**/*,src/scope-polyfill/*
sonar.cpd.exclusions=src/**/*.ts,src/**/*.html"
sonar.coverage.exclusions=*.ts,*.js,*.json,*.properties,src/*.ts,helm/**/*,src/*.ico,src/**/*.module.ts,src/**/*.main.ts,src/**/*.bootstrap.ts,src/environments/*,src/assets/**/*,src/app/*,src/app/shared/generated/**/*,pre_loaders/**/*,src/scope-polyfill/*
sonar.test.inclusions=src/app/**/*.spec.ts
#
# issue exceptions
sonar.issue.ignore.multicriteria=e1
# ignore rule to allow async actions inside constructors
sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S7059
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts
